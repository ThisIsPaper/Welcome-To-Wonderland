@model RegisterHostForm

<!--
    @(Url.GetUmbracoApiService<FacebookApiController>("RegisterHost"))
    {
        'accessToken' : 'xxx',
        'userId' : '123',
        'signedRequest' : "xxx",
        'emailAddress' : 'someone@facebook.com',
        'firstName' : 'first',
        'lastName' : 'last'
    }
-->

@using(Html.BeginUmbracoForm<RegisterHostSurfaceController>("HandleRegisterHostForm", FormMethod.Post, new { ng_submit="processing=true" }))
{

    @Html.ValidationMessage("RegisterHostValidation")


    <div class="grid-8 grid-mobile-12 margin-bottom-large">

        @Html.AntiForgeryToken()


        <label for="email">Email</label>
        @Html.TextBoxFor(x => x.EmailAddress, new { @m_radius_picker="small", @ng_readonly="processing", @ng_class="{'error': errorEmailMessage.length>0}" })
        <div class="margin-bottom-small" ng-show="errorEmailMessage.length>0" ng-init="errorEmailMessage='@Html.ValidationMessageFor(x => x.EmailAddress)'">@Html.ValidationMessageFor(x => x.EmailAddress)</div>



        <label for="Password">Password</label>
        <div class="pos-relative">
            <span class="form-field-ico icon-icon_padlock"></span>
            @Html.PasswordFor(x => x.Password, new { @m_radius_picker="small", @ng_readonly="processing", @ng_class="{'error': errorPasswordMessage.length>0}" })
        </div>
        <div class="margin-bottom-small" ng-show="errorPasswordMessage.length>0" ng-init="errorPasswordMessage='@Html.ValidationMessageFor(x => x.Password)'">@Html.ValidationMessageFor(x => x.Password)</div>

        @Html.LabelFor(x => x.MarketingSource)
        @Html.DropDownListFor(x => x.MarketingSource, (SelectList)this.ViewBag.MarketingSources)


    </div>


    <div class="grid-12">

        <hr/>

        <button type="submit" class="btn-primary float-right width-mobile-100p float-mobile-left" m-radius-picker="small" ng-disabled="processing">Register <span class="icon-icon_chevron_right"></span></button>

        <div class="loader pos-mobile-static float-mobile-left" ng-show="processing"></div>
    </div>

}