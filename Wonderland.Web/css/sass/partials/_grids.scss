/*------------------------------------------------------------------------------------------------------------------------
 @package: Macmillan - Wonderland (app)

 @author: Sam Latif
 @www: http://www.samlatif.co.uk
 @github: samlatif

 @twitter: samlatifuk

 @copyright: COPYRIGHT 8-21-2014 On behalf of Paper Partnerships Ltd
 =============================================================================
 Filename: _grids.scss
 =============================================================================
 This file is responsible for all grid logic in the Macmillan - Wonderland app.  
 Styles should be compiled using compass and sass (make sure SUSY is installed).
 --------------------------------------------------------------------------------------------------------------------- */
@import "compass/css3";
@import "variables";
@import "susy";

@function col-name($n) {
/* Use naming consistent with original 1140x Grid V2 */
  $col-name: $n; //default

  @if $n == 1  {
    $col-name: one;
  }
  @if $n == 2  {
    $col-name: two;
  }
  @if $n == 3  {
    $col-name: three;
  }
  @if $n == 4  {
    $col-name: four;
  }
  @if $n == 5  {
    $col-name: five;
  }
  @if $n == 6  {
    $col-name: six;
  }
  @if $n == 7  {
    $col-name: seven;
  }
  @if $n == 8  {
    $col-name: eight;
  }
  @if $n == 9  {
    $col-name: nine;
  }
  @if $n == 10 {
    $col-name: ten;
  }
  @if $n == 11 {
    $col-name: eleven;
  }
  @if $n == 12 {
    $col-name: twelve;
  }
  @if $n == 13 {
    $col-name: thirteen;
  }
  @if $n == 14 {
    $col-name: fourteen;
  }
  @if $n == 15 {
    $col-name: fifteen;
  }
  @if $n == 16 {
    $col-name: sixteen;
  }
  @return $col-name#{'-' + $ColumnNotation};
}

@function relativeColName($n, $Num-cols) {
  $colClassFloat: $Num-cols / $n;
  @return round($colClassFloat);
}

//%col {
//  @extend %transition-all;
//}

@for $i from 1 through ($Num-cols) {
  //%#{col-name($i)} {
  //  @extend %col;
  //}

  %#{$RowNotation} {
    %#{col-name($i)}:last-child {
      @extend %last !optional;
      @include span($i of $Num-cols);
    }
  }

  %#{col-name($i)} {
    @if $i == $Num-cols {
      @include span($i of $Num-cols);
    }
    @else {
      @include span($i of $Num-cols);
    }
  }
}


.container {
  @include container;
  @extend %border-box;
  max-width: 74.3rem;
  %#{$RowNotation} {
    width: $Container-width;
    margin: 0 auto;
    @extend %overflow-hidden;
    @extend %padding-none;
    @extend %border-box;

    &.extended-height {
      @extend %overflow-visible;
    }
  }
}

%last {
  margin-right: 0;
}



/*=============================================================================
MAT GRID
=============================================================================*/

@import "../../scripts/bower_components/gridle/sass/gridle/gridle";

$settings : (
    context : 12,             // number of columns in your grid
    gutter-width : 6rem,        // size of the gutters
    direction : ltr,             // direction
    name-multiplicator : 1     // to generate like grid-5, grid-10, etc...
    // and more... (see in advanced settings section)
);

@include gridle_setup($settings);

@include gridle_register_state( mobile , (
    max-width : 40rem
));

@include gridle_register_state( tablet, (
    min-width : 40.1rem,
    max-width : 76.7rem,
    gutter-width : 6rem
));

@include gridle_register_state( desktop, (
    min-width : 76.8rem,
    gutter-width : 6rem
));


@include gridle_generate_classes();

.container {
	max-width : 114rem;
	margin : 0 auto;
}