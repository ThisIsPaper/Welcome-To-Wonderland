/*------------------------------------------------------------------------------------------------------------------------
 @package: Macmillan - Wonderland (app)

 @author: Sam Latif
 @www: http://www.samlatif.co.uk
 @github: samlatif

 @twitter: samlatifuk

 @copyright: COPYRIGHT 8-21-2014 On behalf of Paper Partnerships Ltd
 =============================================================================
 Filename: _type.scss
 =============================================================================
 This file is responsible for typographic elements on the Macmillan - Wonderland app.  Styles should be compiled using compass and sass.
 --------------------------------------------------------------------------------------------------------------------- */

//
// Golden Ratio Typography
// --------------------------------------------------
 
 
// Golden Ratio Math
//
// Let's do some math so we can build beautiful typography and vertical rhythm.
// For any magic to happen, set the $Container-width variable on _variables.scss
// to match your content box width (normally this is 640px, 740px, etc...).
//
// Many thanks to Chris Pearson's scary math skills http://t.co/KoeUoEWrNS
// and his Golden Ratio Calculator http://t.co/6MyXPtRrlu
//
// @author Greg Rickaby
// @since 1.0
// @requires $Container-width
// ----------------------------------
$phi: (1 + sqrt(5)) / 2; // 1.61803398874989 or "The Golden Ratio"
$xoo: 1 / (2 * $phi);
$yoo: sqrt($Container-width) / $phi; // Line-height
$zoo: $phi - $xoo * (1 - ($Container-width / $yoo));
 
 
// Title Size
//
// Calculated title size based on $Container-width.
//
// @author Greg Rickaby
// @since 1.0
//
// Usage: @include grTitleSize();
// --------------------------------
@function calcTitleSize() {
  $foo: calcFontSize() * pow($phi, 2);
    @return round($foo);
}
 
@mixin grTitleSize() {
  font-size: calcTitleSize();
  font-size: (calcTitleSize() / calcFontSize()) + rem;
  line-height: calcTitleSize() / $yoo;
}
 
 
// Headline Size
//
// Calculated headline size based on $Container-width.
//
// @author Greg Rickaby
// @since 1.0
//
// Usage: @include grHeadlineSize
// --------------------------------
@function calcHeadlineSize() {
  $foo: calcFontSize() * pow($phi, 1);
    @return round($foo);
}
 
@mixin grHeadlineSize() {
  font-size: (calcHeadlineSize() / calcFontSize()) + rem;
  line-height: calcHeadlineSize() / $yoo;
}
 
 
// Sub-headline Size
//
// Caclulated sub-headline size based on $Container-width.
//
// @author Greg Rickaby
// @since 1.0
//
// Usage: @include grSubHeadlineSize();
// --------------------------------
@function calcSubHeadlineSize() {
  $foo: calcFontSize() * sqrt($phi);
    @return round($foo);
}
 
@mixin grSubHeadlineSize() {
  font-size: calcSubHeadlineSize();
  font-size: (calcSubHeadlineSize() / calcFontSize()) + rem;
  line-height: calcSubHeadlineSize() / $yoo;
}
 
 
// Font Size
//
// Calculated font size based on $Container-width.
//
// @author Greg Rickaby
// @since 1.0
//
// Usage: @include grFontSize();
// --------------------------------
@function calcFontSize() {
  $foo: sqrt($Container-width) / $phi;
    @return round($foo);
}
 
@mixin grFontSize() {
  font-size: calcFontSize() + px;
  font-size: (calcFontSize() / calcFontSize()) + rem;
  line-height: calcFontSize() / $yoo;
}
 
 
// Secondary Text
//
// Calculated secondary text size based on $Container-width.
//
// @author Greg Rickaby
// @since 1.0
//
// Usage: @include grSecondaryText();
// --------------------------------
@function calcSecondaryText() {
  $foo: calcFontSize() * (1 / sqrt($phi));
    @return round($foo);
}
 
@mixin grSecondaryText() {
  font-size: calcSecondaryText() + px;
  font-size: (calcSecondaryText() / calcFontSize()) + rem;
  line-height: calcSecondaryText() / $yoo;
}
 
 
// Default Line Height
//
// Calculate default line-height based on $Container-width.
//
// @author Greg Rickaby
// @since 1.0
//
// Usage: @include grBaseLineHeight();
// --------------------------------
@function calcBaseLineHeight() {
  $foobar: sqrt($Container-width) / $phi;
  $foo: calcFontSize() * ($phi - $xoo * (1 - ($Container-width / pow(calcFontSize() * $phi, 2))));
  $fo: $foo / $foobar;
    @return $fo;
}
 
@mixin grBaseLineHeight() {
  line-height: calcBaseLineHeight();
}
 
 
// Custom Line Height
//
// Calculate a Golden Ratio line-height based on a custom
// value specified by you.
//
// @author Greg Rickaby
// @since 1.0
//
// Usage: @include grCustomLineHeight(26);
// --------------------------------
@function calcCustomLineHeight($target) {
  $foobar: sqrt($Container-width) / $phi;
  $foo: $target / $foobar;
    @return $foo;
}
 
@mixin grCustomLineHeight($target) {
  line-height: calcCustomLineHeight($target);
}

/* Type */
#{headings(all)} {
  font-weight: $HeadingFontWeight;
}

// @for $i from 1 through 6 {
//  #{$i} {
//    font-size: (($Em * $MultiplierLarge) - (($i * (($Em * $MultiplierLarge) / 6 )))) + ($Em * $Multiplier);
//  }
// }

a {
  //@extend %transition-all;
  color: $InverseTextColour;
  text-decoration: none;
}

ul, ol, dl {
  padding-left: ($PaddingLarge * $Multiplier);
  @extend %normal-margin-top-bottom;
}







//////////////////////////
//
//  Further by Matt Rawson | 2014.09.08
//
@font-face {
	font-family: $fontFaceMacmillan;
	src:url('/fonts/macmillan_headline_02_12-webfont.eot?-a7b8pb');
	src:url('/fonts/macmillan_headline_02_12-webfont.eot?#iefix-a7b8pb') format('embedded-opentype'),
		url('/fonts/macmillan_headline_02_12-webfont.woff?-a7b8pb') format('woff'),
		url('/fonts/macmillan_headline_02_12-webfont.ttf?-a7b8pb') format('truetype'),
		url('/fonts/macmillan_headline_02_12-webfont.svg?-a7b8pb#icomoon') format('svg');
	font-weight: normal;
	font-style: normal;
}

@font-face{
    font-family:$fontFaceFutura;
    src:url("/fonts/17fe4ab4-6e45-4ea2-bb53-2123063911c3.eot?#iefix");
    src:url("/fonts/17fe4ab4-6e45-4ea2-bb53-2123063911c3.eot?#iefix") format("eot"),
        url("/fonts/142b09e6-c245-4ff7-b01c-325fa824c99e.woff") format("woff"),
        url("/fonts/e4509cd4-7aa0-4068-89bd-95ffd0bfb6d4.ttf") format("truetype"),
        url("/fonts/d37fcd2f-d43f-4eae-b192-c48028c02797.svg#d37fcd2f-d43f-4eae-b192-c48028c02797") format("svg");
}


.font-macmillan {
    font-family: $fontFaceMacmillan;
}

.font-futura {
    font-family: $fontFaceFutura;
}

.heading-large {
  font-size: $HeadingFontSizeLarge;
}

.heading-small {
  font-size: $HeadingFontSizeSmall;
}

.body-large {
  @extend %large;
}

.body-medium {
  @extend %medium;
}

.body-small {
  @extend %small;
}

.body-mini {
  @extend %mini;
}



.body-mega {
    @extend .heading-large;
    color: $SecondaryColour;
    text-decoration: none;
}

.body-emphasize {
    color: $greyReallyDark;
    font-weight: bold;
}

.body-dephasize {
    color: $greyLight;
}

.body-highlight {
    color: $SecondaryColour;
    text-decoration: none;
}

.body-h1 {
    font-family: 'macmillan';
    color: $FourthColour;
}



h1 {
    font-family: 'macmillan';
    color: $FourthColour;
    font-size: $HeadingFontSizeLarge;
    margin: 0;
    width: 100%;
    text-align: center;
    line-height: 4.2rem;

    &.lighter {
        color: $greenDark;
    }

    &.bigger, .bigger {
        font-size: $HeadingFontSizeExtraLarge;
    }
}

h2 {
    font-family: 'macmillan';
    color: $SecondaryColour;
    font-size: $FontSizeMedium;
    margin: .5rem 0;
}

h3 {
    color: $FourthColour;
    font-size: $FontSizeLarge;
    margin: 0;
    font-weight: bold;
}

h4 {
    color: $greyReallyDark;
    font-size: $FontSizeLarge;
    margin: 2rem 0;
    font-weight: bold;

    span {
        color: $greyDark;
        font-weight: normal;
    }

    &.top {
        @extend .margin-top-0;
    }
}

hr {
    border: none;
    border-bottom: .1rem solid $greyReallyLight;
    margin: $padSmallValue 0;
}

.back {
    @extend .body-medium;
    text-transform: uppercase;
    color: white;
    font-weight: bold;

    [class^="icon-"], [class*=" icon-"] {
        @extend .margin-right-small;
    }
}